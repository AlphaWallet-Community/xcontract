let test = require("tape");
let web3Handler = require("../public/javascripts/web3Handler.js");
//let testAbiOpenRep = "[{'constant':false,'inputs':[{'name':'vendor','type':'address'}],'name':'trade','outputs':[],'payable':false,'type':'function'},{'constant':false,'inputs':[{'name':'username','type':'string'},{'name':'location','type':'string'}],'name':'addUser','outputs':[{'name':'','type':'string'}],'payable':false,'type':'function'},{'constant':false,'inputs':[{'name':'vendor','type':'address'},{'name':'isPositive','type':'bool'},{'name':'message','type':'string'}],'name':'giveReputation','outputs':[],'payable':false,'type':'function'},{'constant':false,'inputs':[{'name':'user','type':'address'}],'name':'viewReputation','outputs':[{'name':'','type':'uint256'},{'name':'','type':'uint256'},{'name':'','type':'uint256'},{'name':'','type':'uint256'},{'name':'','type':'uint256'}],'payable':false,'type':'function'},{'payable':false,'type':'fallback'},{'anonymous':false,'inputs':[{'indexed':true,'name':'user','type':'address'},{'indexed':true,'name':'message','type':'string'}],'name':'_positiveReputation','type':'event'},{'anonymous':false,'inputs':[{'indexed':true,'name':'user','type':'address'},{'indexed':true,'name':'message','type':'string'}],'name':'_negativeReputation','type':'event'},{'anonymous':false,'inputs':[{'indexed':true,'name':'username','type':'string'},{'indexed':true,'name':'location','type':'string'},{'indexed':true,'name':'user','type':'address'}],'name':'_addUser','type':'event'},{'anonymous':false,'inputs':[{'indexed':true,'name':'vendor','type':'address'},{'indexed':true,'name':'buyer','type':'address'}],'name':'_newTrade','type':'event'},{'anonymous':false,'inputs':[{'indexed':true,'name':'user','type':'address'},{'indexed':true,'name':'positive','type':'uint256'},{'indexed':true,'name':'negative','type':'uint256'},{'indexed':false,'name':'total','type':'uint256'},{'indexed':false,'name':'burnedEth','type':'uint256'},{'indexed':false,'name':'burnedCoins','type':'uint256'}],'name':'_viewedReputation','type':'event'}]";
let testnetContractAddress = "0xa66777ab2fdb47180de898a4bd5a43515c5efec6";
let abi = ' [{"constant":false,"inputs":[{"name":"vendor","type":"address"}],"name":"trade","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"username","type":"string"},{"name":"location","type":"string"}],"name":"addUser","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"isPositive","type":"bool"},{"name":"message","type":"string"}],"name":"giveReputation","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"}],"name":"viewReputation","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"payable":false,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":true,"name":"message","type":"string"}],"name":"_positiveReputation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":true,"name":"message","type":"string"}],"name":"_negativeReputation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"username","type":"string"},{"indexed":true,"name":"location","type":"string"},{"indexed":true,"name":"user","type":"address"}],"name":"_addUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"vendor","type":"address"},{"indexed":true,"name":"buyer","type":"address"}],"name":"_newTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"user","type":"address"},{"indexed":true,"name":"positive","type":"uint256"},{"indexed":true,"name":"negative","type":"uint256"},{"indexed":false,"name":"total","type":"uint256"},{"indexed":false,"name":"burnedEth","type":"uint256"},{"indexed":false,"name":"burnedCoins","type":"uint256"}],"name":"_viewedReputation","type":"event"}]';
let testAbi = JSON.parse(abi);

test("Does not throw when trying to get Contract from ABI and address", function(t) {
    t.doesNotThrow(function () {
        web3Handler.getContract(testAbi, testnetContractAddress);
    });
    t.end();
});

test("can get function object from ABI", function(t){
    t.isEqual(typeof web3Handler.extractAbiFunctions(testAbi), "object", "should return an object");
    t.end();
});
